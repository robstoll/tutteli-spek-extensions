buildscript {
    project.group = 'ch.tutteli.spek'
    project.version ='1.1.0'
    project.description = 'A set of Spek extensions'

    ext {
        // main
        kotlin_version = '1.4.0'

        // test
        spek_version = '2.0.12'
        atrium_version = '0.12.0'
        niok_version = '1.3.4'

        // gradle plugins
        tutteli_plugins_version = "0.33.1"
        detekt_version = '1.11.1'
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "ch.tutteli:tutteli-gradle-dokka:$tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-module-info:$tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-utils:$tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-project-utils:$tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-publish:$tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-spek:$tutteli_plugins_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

apply plugin: "ch.tutteli.project.utils"
apply plugin: 'ch.tutteli.kotlin.utils'
kotlinutils.kotlinVersion = kotlin_version


repositories {
    maven {
        url 'https://dl.bintray.com/spekframework/spek'
        content {
            includeGroupByRegex 'org\\.spekframework(\\..*)?'
        }
    }
    maven {
        url "https://dl.bintray.com/robstoll/tutteli-jars"
        content {
            includeGroupByRegex 'ch\\.tutteli(\\..*)?'
        }
    }
    mavenCentral()
    jcenter()
}

apply plugin: 'kotlin'
apply plugin: 'ch.tutteli.dokka'
apply plugin: 'ch.tutteli.kotlin.module.info'
apply plugin: 'ch.tutteli.publish'
apply plugin: 'ch.tutteli.spek'

dependencies {
    implementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version", excludeKotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation "ch.tutteli.atrium:atrium-cc-en_GB-robstoll:$atrium_version", excludeKotlin
    testImplementation "ch.tutteli.niok:niok:$niok_version", excludeKotlin
}

apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    failFast = true
    input = files(subprojects*.collect { it.projectDir })
    config = files("$rootProject.projectDir/gradle/scripts/detekt.yml")
    reports {
        xml.enabled = true
    }
}

/*

Release & deploy a commit
--------------------------------
1. change search for X.Y.Z-SNAPSHOT and change to X.Y.Z
2. search for current version and replace with new
3. update master:
    a) point to the tag
        1) update badge versions
        2) search for `tree/master` and replace it with `tree/vX.Y.Z` (README.md)
    b) commit (modified build.gradle, README.md)
    c) git tag vX.Y.Z
    d) git push origin vX.Y.Z
4. deploy to bintray:
    a) java -version 2>&1 | grep "version \"9" && CI=true ./gr clean publishToBintray
    b) Log in to bintray, check that there are 16 artifacts and publish new jars
5. create release on github

Prepare next dev cycle
-----------------------
1. change version in build.gradle to X.Y.Z-SNAPSHOT
2. point to master
   a) search for `tag=vX.Y.Z` and replace it with `branch=master`
   b) search for `tree/vX.Y.Z` and replace it with `tree/master`
3. commit & push changes

*/
